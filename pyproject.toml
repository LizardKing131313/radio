[build-system]
requires = ["setuptools>=69", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "playlist_search"
description = "Автоматический сборщик плейлистов YouTube для стрим-радио"
version = "0.1.0"
requires-python = ">=3.11"
dependencies = [
  "yt-dlp>=2025.1.1",
  "typer>=0.12",
  "pydantic>=2.0",
  "pyyaml>=6.0",
  "jinja2>=3.1"
]
[project.optional-dependencies]
dev = [
  "ruff>=0.6.5",
  "black>=24.8",
  "pytest>=8.0",
  "pytest-asyncio>=0.23",
  "pytest-cov>=4.1", # ← нужно для --cov
  "mypy>=1.17.1", # ← typecheck в CI/Makefile
  "pre-commit>=3.7",
  "coverage[toml]>=7.6",
  "anybadge>=1.16", # ← бейдж покрытия в CI
  "pip-audit>=2.7",
  "types-PyYAML",
  "pytest-builtin-types"
]

[tool.setuptools.packages.find]
where = ["."]

# ---------- Black ----------
[tool.black]
line-length = 100
target-version = ["py311"]
skip-string-normalization = false

# ---------- Ruff (новая схема 0.6+) ----------
[tool.ruff]
line-length = 100
target-version = "py311"
respect-gitignore = true
exclude = ["*.j2"]

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B", "SIM", "PT", "RUF", "C4", "ANN"]
ignore = ["RUF001", "RUF002", "RUF003"]
# Часто удобно игнорить F401 в __init__.py, где реэкспортируем API:
per-file-ignores = { "__init__.py" = ["F401"] }

[tool.ruff.lint.isort]
known-first-party = ["scripts", "search"]
combine-as-imports = true
lines-after-imports = 2

# Форматирование отдадим Black; Ruff не будет форматить код как форматтер.
[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = false
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
strict_optional = false
disallow_untyped_defs = false
exclude = "(tests/|^NUL$)"
cache_dir = ".mypy_cache"

[[tool.mypy.overrides]]
module = ["anybadge.*"]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = ["typer.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
pythonpath = [".", "scripts"]

[tool.coverage.run]
branch = true
source = ["scripts"]
relative_files = true
omit = [
  "*/.venv/*",
  "*/.venv-wsl/*",
  "tests/**",
  "**/__init__.py",
]
parallel = true
concurrency = ["thread", "multiprocessing"]

[tool.coverage.report]
skip_empty = true
show_missing = true
fail_under = 0  # поднимешь, когда тестов станет больше
exclude_lines = [
  "pragma: no cover",
  "if __name__ == .__main__.:",
  "raise NotImplementedError",
]
