name: Docker Images (buildx+bake)

on:
  push:
    branches: [ "main" ]
    paths:
      - "../../docker/Dockerfile"
      - "../../docker/docker-bake.hcl"
      - "bots/**"
      - "libs/**"
      - "scripts/**"
  workflow_dispatch:
    inputs:
      version:
        description: "Image version tag (defaults to git SHA)"
        required: false

concurrency:
  group: docker-build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build & (optional) Push multi-arch
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write  # для ghcr.io
    env:
      REGISTRY: ${{ vars.DOCKER_REGISTRY }} # например ghcr.io/<owner> или docker.io/<user>
      REPO: tg-bots
      VERSION: ${{ inputs.version || github.sha }}
      PLATFORMS: linux/amd64,linux/arm64
      PUSH: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') && 'true' || 'false' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Автологин в GHCR (если REGISTRY начинается с ghcr.io)
      - name: Login to GHCR
        if: startsWith(env.REGISTRY, 'ghcr.io')
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Логин в произвольный реестр (Docker Hub и т.д.) при наличии секретов
      - name: Login to custom registry
        if: env.REGISTRY != '' && !startsWith(env.REGISTRY, 'ghcr.io') && secrets.REGISTRY_USERNAME && secrets.REGISTRY_PASSWORD
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Print config
        run: |
          echo "REGISTRY=${REGISTRY}"
          echo "VERSION=${VERSION}"
          echo "PLATFORMS=${PLATFORMS}"
          echo "PUSH=${PUSH}"

      # Кэш слоёв (gha driver)
      - name: Build (no push)
        if: env.PUSH == 'false'
        uses: docker/bake-action@v5
        with:
          files: |
            docker-bake.hcl
          set: |
            *.platform=${{ env.PLATFORMS }}
            *.tags+={{default "latest" env.VERSION}}
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
            meta.labels.org.opencontainers.image.revision=${{ github.sha }}
            meta.labels.org.opencontainers.image.created=${{ github.event.repository.pushed_at }}
          targets: all

      - name: Build & Push
        if: env.PUSH == 'true'
        uses: docker/bake-action@v5
        with:
          files: |
            docker-bake.hcl
          set: |
            *.platform=${{ env.PLATFORMS }}
            *.tags+={{default "latest" env.VERSION}}
            *.cache-from=type=gha
            *.cache-to=type=gha,mode=max
            meta.labels.org.opencontainers.image.revision=${{ github.sha }}
            meta.labels.org.opencontainers.image.created=${{ github.event.repository.pushed_at }}
          targets: push
